{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"HASP - Open Hardware edition # This project is a re-implementation of the popular HASwitchPlate sketch created by aderusha. The original HASwitchPlate project uses a Wemos D1 mini and requires a Nextion/TJC HMI display. This rewrite removes the Nextion/TJC requirement by using the Littlev Graphics Library on the MCU to drive a cheap commodity display. This version also adds ESP32 and STM32F4 support to take advantage of the additional hardware capabilities. Demo Screens # Features # Feature ESP8266 ESP32 STM32F4 SPI display yes yes yes Parallel display no yes yes PWM Screen dimming yes yes yes Maximum Page Count 4 12 12 Object Types / Widgets 14 15 15 Dynamic Objects yes yes yes Lvgl Theme Support basic only all themes tbd Custom .zi V5 font yes (latin1) yes (latin1) no FontAwesome Icons 1300+ 1300+ no PNG images no tbd tbd Network Wifi Wifi Ethernet Cloning # Make sure to add the --recursive parameter when cloning the project. Otherwise git will not download the required submodules in the /lib subdirectory. git clone --recursive https://github.com/fvanroie/hasp-lvgl If you already cloned hasp-lvgl without the submodules, you can fetch the submodules seperately using: git submodule update --init --recursive To build a defierent branch use: git clone --recursive https://github.com/fvanroie/hasp-lvgl cd hasp-lvgl git checkout 0.1.0-dev git submodule update --init --recursive Getting Started # Check out the wiki for how-to's, information and frequently asked questions. Support # For support using hasp-lvgl, please join the #hasp-lvgl channel on Discord.","title":"Home"},{"location":"#hasp-open-hardware-edition","text":"This project is a re-implementation of the popular HASwitchPlate sketch created by aderusha. The original HASwitchPlate project uses a Wemos D1 mini and requires a Nextion/TJC HMI display. This rewrite removes the Nextion/TJC requirement by using the Littlev Graphics Library on the MCU to drive a cheap commodity display. This version also adds ESP32 and STM32F4 support to take advantage of the additional hardware capabilities.","title":"HASP - Open Hardware edition"},{"location":"#demo-screens","text":"","title":"Demo Screens"},{"location":"#features","text":"Feature ESP8266 ESP32 STM32F4 SPI display yes yes yes Parallel display no yes yes PWM Screen dimming yes yes yes Maximum Page Count 4 12 12 Object Types / Widgets 14 15 15 Dynamic Objects yes yes yes Lvgl Theme Support basic only all themes tbd Custom .zi V5 font yes (latin1) yes (latin1) no FontAwesome Icons 1300+ 1300+ no PNG images no tbd tbd Network Wifi Wifi Ethernet","title":"Features"},{"location":"#cloning","text":"Make sure to add the --recursive parameter when cloning the project. Otherwise git will not download the required submodules in the /lib subdirectory. git clone --recursive https://github.com/fvanroie/hasp-lvgl If you already cloned hasp-lvgl without the submodules, you can fetch the submodules seperately using: git submodule update --init --recursive To build a defierent branch use: git clone --recursive https://github.com/fvanroie/hasp-lvgl cd hasp-lvgl git checkout 0.1.0-dev git submodule update --init --recursive","title":"Cloning"},{"location":"#getting-started","text":"Check out the wiki for how-to's, information and frequently asked questions.","title":"Getting Started"},{"location":"#support","text":"For support using hasp-lvgl, please join the #hasp-lvgl channel on Discord.","title":"Support"},{"location":"commands/","text":"Commands are not related to an object, but can get or set global properties or invoke system commands on the device. Commands can be issued via the Serial Commandline, Telnet Commandline or MQTT. For MQTT, use the hasp/<platename>/command topic with payload <keyword> <parameter(s)> Here is a list of all the recaognized command keywords: Pages # page [0-11] Switches the display to show the objects from a diferent page. clearpage [0-11,254] Deletes all objects on a given page. If no page number is specified, it clears the current page. To delete individual objects, you can issue the p[x].b[y].delete command. Backlight # dim [0-100] (alias: brightness ) Sets the level of the backlight from 0 to 100%, where 0% is off and 100% is full brightness. Example: dim 50 sets the display to half the brightness. Tip: this can be used in conjunction with the idle event e.g. to dim the backlight after a short period of inactivity. light Switches the backlight on or off, independent of the set dim level. Turning the backlight on will restore the brightness to the previous dim level. Example: light on acepted values: on/off, true/false, 0/1, yes/no Tip: this can be used in conjunction with the idle event, e.g. to turn the backlight off after a long period of inactivity. ?> The dim and light command depends on a GPIO pin to be connected to control the the TFT_LED backlight via a transistor. wakeup Clears the idle state of the device and publishes an state/idle = OFF status message. It resets the idle counter as if a touch event occured on the devide. This is helpfull e.g. when you want to wake up the display when an external event has occured, like a PIR motion sensor. System commands # calibrate Start on-screen touch calibration. ?> You need to issue a soft reboot command to save the new calibration settings. If you do a hard reset of the device, the calibration settings will be lost. screenshot Saves a picture of the current screen to the flash filesystem. You can retrieve it via http://>ip-address</screenshot.bmp This can be handy for bug reporting or documentation. The previous screenshot is overwritten. statusupdate Reports the status of the MCU. The response will be posted to the state topic: \"statusupdate\": { \"status\": \"available\", \"espVersion\": \"0.0.6\", \"espUptime\": 124, \"signalStrength\": -72, \"haspIP\": \"10.1.0.148\", \"heapFree\": 5912, \"heapFragmentation\": 7, \"espCore\": \"2_6_3\" } reboot (alias: restart ) Saves any changes in the configuration file and reboots the device. factoryreset Clear the filesystem and eeprom and reboot the device in its initial state. Warning: There is no confirmation prompt nor undo function! Configuration Settings # Wifi # ssid Sets network name of the access point to connect to. pass Sets the optional password for the access point to connect to. MQTT # hostname Sets the hostname of the device and mqtt topic for the node to hasp/<hostname>/ mqtthost Sets the hostname of the mqtt broker. mqttport Sets the port of the mqtt broker. mqttuser Sets the optional username for the mqtt broker. mqttpass Sets the optional password for the mqtt broker. Config/xxx # You can get or set the configuration of a hasp-lvgl submodule in json format. To get the configuration, the command config/&gt;submodule&lt; . The result will be published to hasp/plate35/state/config . Passwords will be omited from the result. config/wifi config/mqtt config/http config/mdns config/hasp config/gui config/debug To update the configuration simple issue the same command config/&gt;submodule&lt; with updated json payload. Multiple Commands # json When you want to execute multiple commands in one payload, you can use the json command to create an array of commands. Each command is an element in this array of strings: [\"page 5\",\"dim 50\",\"light on\",\"statusupdate\"] The commands are interpreted and processed sequentially.","title":"Commands"},{"location":"commands/#pages","text":"page [0-11] Switches the display to show the objects from a diferent page. clearpage [0-11,254] Deletes all objects on a given page. If no page number is specified, it clears the current page. To delete individual objects, you can issue the p[x].b[y].delete command.","title":"Pages"},{"location":"commands/#backlight","text":"dim [0-100] (alias: brightness ) Sets the level of the backlight from 0 to 100%, where 0% is off and 100% is full brightness. Example: dim 50 sets the display to half the brightness. Tip: this can be used in conjunction with the idle event e.g. to dim the backlight after a short period of inactivity. light Switches the backlight on or off, independent of the set dim level. Turning the backlight on will restore the brightness to the previous dim level. Example: light on acepted values: on/off, true/false, 0/1, yes/no Tip: this can be used in conjunction with the idle event, e.g. to turn the backlight off after a long period of inactivity. ?> The dim and light command depends on a GPIO pin to be connected to control the the TFT_LED backlight via a transistor. wakeup Clears the idle state of the device and publishes an state/idle = OFF status message. It resets the idle counter as if a touch event occured on the devide. This is helpfull e.g. when you want to wake up the display when an external event has occured, like a PIR motion sensor.","title":"Backlight"},{"location":"commands/#system-commands","text":"calibrate Start on-screen touch calibration. ?> You need to issue a soft reboot command to save the new calibration settings. If you do a hard reset of the device, the calibration settings will be lost. screenshot Saves a picture of the current screen to the flash filesystem. You can retrieve it via http://>ip-address</screenshot.bmp This can be handy for bug reporting or documentation. The previous screenshot is overwritten. statusupdate Reports the status of the MCU. The response will be posted to the state topic: \"statusupdate\": { \"status\": \"available\", \"espVersion\": \"0.0.6\", \"espUptime\": 124, \"signalStrength\": -72, \"haspIP\": \"10.1.0.148\", \"heapFree\": 5912, \"heapFragmentation\": 7, \"espCore\": \"2_6_3\" } reboot (alias: restart ) Saves any changes in the configuration file and reboots the device. factoryreset Clear the filesystem and eeprom and reboot the device in its initial state. Warning: There is no confirmation prompt nor undo function!","title":"System commands"},{"location":"commands/#configuration-settings","text":"","title":"Configuration Settings"},{"location":"commands/#wifi","text":"ssid Sets network name of the access point to connect to. pass Sets the optional password for the access point to connect to.","title":"Wifi"},{"location":"commands/#mqtt","text":"hostname Sets the hostname of the device and mqtt topic for the node to hasp/<hostname>/ mqtthost Sets the hostname of the mqtt broker. mqttport Sets the port of the mqtt broker. mqttuser Sets the optional username for the mqtt broker. mqttpass Sets the optional password for the mqtt broker.","title":"MQTT"},{"location":"commands/#configxxx","text":"You can get or set the configuration of a hasp-lvgl submodule in json format. To get the configuration, the command config/&gt;submodule&lt; . The result will be published to hasp/plate35/state/config . Passwords will be omited from the result. config/wifi config/mqtt config/http config/mdns config/hasp config/gui config/debug To update the configuration simple issue the same command config/&gt;submodule&lt; with updated json payload.","title":"Config/xxx"},{"location":"commands/#multiple-commands","text":"json When you want to execute multiple commands in one payload, you can use the json command to create an array of commands. Each command is an element in this array of strings: [\"page 5\",\"dim 50\",\"light on\",\"statusupdate\"] The commands are interpreted and processed sequentially.","title":"Multiple Commands"},{"location":"compiling/","text":"Cloning # Make sure to add the --recursive parameter when cloning the project from GitHub. Otherwise git will not download the required submodules in the /lib subdirectory. git clone --recursive https://github.com/fvanroie/hasp-lvgl If you already cloned hasp-lvgl without the submodules, you can fetch the submodules seperately using: git submodule update --init --recursive To switch to a different branch use: git clone --recursive https://github.com/fvanroie/hasp-lvgl cd hasp-lvgl git checkout 0.2.0 git submodule update --init --recursive","title":"Compiling"},{"location":"compiling/#cloning","text":"Make sure to add the --recursive parameter when cloning the project from GitHub. Otherwise git will not download the required submodules in the /lib subdirectory. git clone --recursive https://github.com/fvanroie/hasp-lvgl If you already cloned hasp-lvgl without the submodules, you can fetch the submodules seperately using: git submodule update --init --recursive To switch to a different branch use: git clone --recursive https://github.com/fvanroie/hasp-lvgl cd hasp-lvgl git checkout 0.2.0 git submodule update --init --recursive","title":"Cloning"},{"location":"example-pages/","text":"Example file # This is a real-world example of a pages.jsonl file: Show Jsonl Code (Click to expand) {\"page\":0,\"comment\":\"---------- Page 0 ----------\"} {\"objid\":10,\"id\":1,\"x\":10,\"y\":45,\"w\":220,\"h\":55,\"toggle\":\"TRUE\",\"txt\":\"Push Me \\uf0a6\"} {\"objid\":11,\"id\":2,\"x\":10,\"y\":100,\"w\":220,\"h\":55,\"txt\":\"A Checkbox\"} {\"objid\":12,\"id\":3,\"x\":10,\"y\":10,\"w\":220,\"h\":30,\"txt\":\"My Label\",\"align\":1,\"padh\":50} {\"objid\":40,\"id\":4,\"x\":70,\"y\":205,\"w\":100,\"h\":55} {\"objid\":41,\"id\":5,\"x\":10,\"y\":205,\"w\":55,\"h\":55} {\"objid\":50,\"id\":6,\"x\":10,\"y\":150,\"w\":150,\"options\":\"\\uf007 Line 1\\n\\uf007 Line 2\\n\\uf007 Line 3\"} {\"objid\":21,\"id\":7,\"x\":165,\"y\":140,\"w\":70,\"h\":70} {\"page\":1,\"comment\":\"---------- Page 1 ----------\"} {\"objid\":30,\"id\":1,\"x\":10,\"y\":170,\"w\":200,\"h\":50} {\"objid\":31,\"id\":3,\"x\":13,\"y\":10,\"w\":100,\"h\":100} {\"objid\":32,\"id\":4,\"x\":10,\"y\":110,\"w\":200,\"h\":50} {\"objid\":33,\"id\":5,\"x\":127,\"y\":10,\"w\":100,\"h\":100} {\"objid\":12,\"id\":10,\"x\":0,\"y\":0,\"w\":70,\"h\":50,\"parentid\":5,\"txt\":\"\\uf00c OK\"} {\"comment\":\"---------- Page 2 ----------\"} {\"objid\":20,\"id\":1,\"page\":2,\"x\":20,\"y\":0,\"w\":200,\"h\":200} {\"objid\":20,\"id\":2,\"page\":2,\"x\":20,\"y\":210,\"w\":200,\"h\":50,\"rect\":\"TRUE\"} {\"page\":3,\"comment\":\"---------- Page 3 ----------\"} {\"objid\":50,\"id\":1,\"x\":10,\"y\":10,\"w\":220,\"options\":\"Spring\\nSummer\\nAutumn\\nWinter\"} {\"objid\":51,\"id\":2,\"x\":40,\"y\":50,\"w\":160,\"rows\":3,\"options\":\"2020\\n2021\\n2022\\n2023\\n2024\"} {\"page\":254,\"comment\":\"---------- Page 254 ----------\"} {\"objid\":10,\"id\":1,\"x\":0,\"y\":270,\"w\":75,\"h\":50,\"opacity\":100,\"txt\":\"\\uF053 Prev\"} {\"objid\":10,\"id\":2,\"x\":75,\"y\":270,\"w\":90,\"h\":50,\"opacity\":100,\"txt\":\"\\uF015 Home\"} {\"objid\":10,\"id\":3,\"x\":165,\"y\":270,\"w\":75,\"h\":50,\"opacity\":100,\"txt\":\"Next \\uF054\"} Result # Page 0 Page 1 Page 2 Page 3","title":"Example pages"},{"location":"example-pages/#example-file","text":"This is a real-world example of a pages.jsonl file: Show Jsonl Code (Click to expand) {\"page\":0,\"comment\":\"---------- Page 0 ----------\"} {\"objid\":10,\"id\":1,\"x\":10,\"y\":45,\"w\":220,\"h\":55,\"toggle\":\"TRUE\",\"txt\":\"Push Me \\uf0a6\"} {\"objid\":11,\"id\":2,\"x\":10,\"y\":100,\"w\":220,\"h\":55,\"txt\":\"A Checkbox\"} {\"objid\":12,\"id\":3,\"x\":10,\"y\":10,\"w\":220,\"h\":30,\"txt\":\"My Label\",\"align\":1,\"padh\":50} {\"objid\":40,\"id\":4,\"x\":70,\"y\":205,\"w\":100,\"h\":55} {\"objid\":41,\"id\":5,\"x\":10,\"y\":205,\"w\":55,\"h\":55} {\"objid\":50,\"id\":6,\"x\":10,\"y\":150,\"w\":150,\"options\":\"\\uf007 Line 1\\n\\uf007 Line 2\\n\\uf007 Line 3\"} {\"objid\":21,\"id\":7,\"x\":165,\"y\":140,\"w\":70,\"h\":70} {\"page\":1,\"comment\":\"---------- Page 1 ----------\"} {\"objid\":30,\"id\":1,\"x\":10,\"y\":170,\"w\":200,\"h\":50} {\"objid\":31,\"id\":3,\"x\":13,\"y\":10,\"w\":100,\"h\":100} {\"objid\":32,\"id\":4,\"x\":10,\"y\":110,\"w\":200,\"h\":50} {\"objid\":33,\"id\":5,\"x\":127,\"y\":10,\"w\":100,\"h\":100} {\"objid\":12,\"id\":10,\"x\":0,\"y\":0,\"w\":70,\"h\":50,\"parentid\":5,\"txt\":\"\\uf00c OK\"} {\"comment\":\"---------- Page 2 ----------\"} {\"objid\":20,\"id\":1,\"page\":2,\"x\":20,\"y\":0,\"w\":200,\"h\":200} {\"objid\":20,\"id\":2,\"page\":2,\"x\":20,\"y\":210,\"w\":200,\"h\":50,\"rect\":\"TRUE\"} {\"page\":3,\"comment\":\"---------- Page 3 ----------\"} {\"objid\":50,\"id\":1,\"x\":10,\"y\":10,\"w\":220,\"options\":\"Spring\\nSummer\\nAutumn\\nWinter\"} {\"objid\":51,\"id\":2,\"x\":40,\"y\":50,\"w\":160,\"rows\":3,\"options\":\"2020\\n2021\\n2022\\n2023\\n2024\"} {\"page\":254,\"comment\":\"---------- Page 254 ----------\"} {\"objid\":10,\"id\":1,\"x\":0,\"y\":270,\"w\":75,\"h\":50,\"opacity\":100,\"txt\":\"\\uF053 Prev\"} {\"objid\":10,\"id\":2,\"x\":75,\"y\":270,\"w\":90,\"h\":50,\"opacity\":100,\"txt\":\"\\uF015 Home\"} {\"objid\":10,\"id\":3,\"x\":165,\"y\":270,\"w\":75,\"h\":50,\"opacity\":100,\"txt\":\"Next \\uF054\"}","title":"Example file"},{"location":"example-pages/#result","text":"Page 0 Page 1 Page 2 Page 3","title":"Result"},{"location":"faq/","text":"The font looks tiny # On ESP8266, the out-of-the box font is Unscii 8pt because this font takes up very little space in memory and on flash. This default font is just intended to get the device setup, then you can Upload your own .zi font. On ESP32, the default font is Monserrat 12. How to use Fontawesome icons? # Upload another .zi file named fontawesome xx .zi of the same point size as the normal text .zi font. e.g. If your custom font is arial24.zi\u00b4, you should also add a fontawesome24.zi` file. Is there a file browser built-in? # A: There is no native file browser included yet, as this currently is low on the priority list. However, you can upload the edit.htm.gz (3kB) file to the SPIFFS partition from the ESP32 FSBrowser repository. Download it from: https://github.com/espressif/arduino-esp32/blob/master/libraries/WebServer/examples/FSBrowser/data/edit.htm.gz When the edit.htm.gz file is present on Spiffs you will see an additional File Browser button on the Main Webpage: Using that webpage, you can right-click and delete files: How to delete files from flash? # See: Is there a file browser built-in?","title":"FAQ"},{"location":"faq/#the-font-looks-tiny","text":"On ESP8266, the out-of-the box font is Unscii 8pt because this font takes up very little space in memory and on flash. This default font is just intended to get the device setup, then you can Upload your own .zi font. On ESP32, the default font is Monserrat 12.","title":"The font looks tiny"},{"location":"faq/#how-to-use-fontawesome-icons","text":"Upload another .zi file named fontawesome xx .zi of the same point size as the normal text .zi font. e.g. If your custom font is arial24.zi\u00b4, you should also add a fontawesome24.zi` file.","title":"How to use Fontawesome icons?"},{"location":"faq/#is-there-a-file-browser-built-in","text":"A: There is no native file browser included yet, as this currently is low on the priority list. However, you can upload the edit.htm.gz (3kB) file to the SPIFFS partition from the ESP32 FSBrowser repository. Download it from: https://github.com/espressif/arduino-esp32/blob/master/libraries/WebServer/examples/FSBrowser/data/edit.htm.gz When the edit.htm.gz file is present on Spiffs you will see an additional File Browser button on the Main Webpage: Using that webpage, you can right-click and delete files:","title":"Is there a file browser built-in?"},{"location":"faq/#how-to-delete-files-from-flash","text":"See: Is there a file browser built-in?","title":"How to delete files from flash?"},{"location":"firmware-update/","text":"ESP Firmware Update # Serial Upload # Either use Tasmotizer or esptool.py to upload a new firmware file to the ESP. This procedure is the same as the initial installation. HTTP Upload # When the ESP has previously been flashed via serial, you can upload a new firmware file using the internal webserver. HTTP Update # When the ESP has previously been flashed via serial you can download and install new firmware directly from an external webserver. OTA Upload # When the ESP has previously been flashed via serial, subsequent updates can be performed Over-the-Air from within PlatformIO. STM32F4xx Firmware Update #","title":"Firmware update"},{"location":"firmware-update/#esp-firmware-update","text":"","title":"ESP Firmware Update"},{"location":"firmware-update/#serial-upload","text":"Either use Tasmotizer or esptool.py to upload a new firmware file to the ESP. This procedure is the same as the initial installation.","title":"Serial Upload"},{"location":"firmware-update/#http-upload","text":"When the ESP has previously been flashed via serial, you can upload a new firmware file using the internal webserver.","title":"HTTP Upload"},{"location":"firmware-update/#http-update","text":"When the ESP has previously been flashed via serial you can download and install new firmware directly from an external webserver.","title":"HTTP Update"},{"location":"firmware-update/#ota-upload","text":"When the ESP has previously been flashed via serial, subsequent updates can be performed Over-the-Air from within PlatformIO.","title":"OTA Upload"},{"location":"firmware-update/#stm32f4xx-firmware-update","text":"","title":"STM32F4xx Firmware Update"},{"location":"hardware/","text":"Hasp-lvgl supports the ESP32, ESP8266 and STM32F4 families of microcontrollers. It needs a compatible micro-controller with drivers supporting the attached display, touch controller, storage and network. Below is a list of recommended development boards and a TFT touchscreen to get you up-and-running in no time. Recommended Boards # table th:first-of-type { width: 12%; } table th:nth-of-type(2) { width: 22%; } table th:nth-of-type(3) { width: 22%; } table th:nth-of-type(4) { width: 22%; } table th:last-of-type { width: 22%; } Basic Standard Pro Experimental MCU ESP8266 ESP32-WROOM ESP32-WROVER STM32F4 CPU Freq. 80Mhz 240Mhz 240Mhz 168 MHz Ram 80Kb 520Kb 520Kb 192Kb PSRam no no yes no Minimal Flash 4MB 4MB 4MB 512Kb Display ILI9341 SPI ILI9341 SPI ILI9341 SPI ILI9341 FSMC Touch XPT2046 SPI XPT2046 SPI XPT2046 SPI XPT2046 SPI Network Wifi Wifi Wifi Ethernet / Wifi Dev. Board* D1 mini ESP8266 D1 mini ESP32 TTGO T7 v1.4 Mini32 STM32F407VET/ZGT Black Firmware Download Download Download !> * Due to the large number of possible hardware options a selection of 3 popular ESP development boards has been made for the precompiled binaries. ?> Advanced users can build and compile custom configurations using PlatformIO, however this is not currently supported. Recommended Display # Lolin TFT 2.4\" # ILI9341 SPI touchscreens with backlight dimming via PWM are quite cheap to get. An ILI9341 TFT display with SPI is required when using a pre-built binary. The touchcontroller needs to be the XPT2046 Resistive Touch driver. The Lolin TFT 2.4\" is plug-and-play with the 3 recommended ESP development boards. If you have another ESP or MCU, you can still use this display using jumper cables. You can also solder a row of headers at the bottom of the display to plug it into a breadboard. Therefor the Lolin TFT 2.4 Touch Shield is used as the development display of choice. Backlight Control # To use PWM dimming on the Lolin TFT 2.4\" you must solder the TFT-LED pin to either D1, D2 or D4. D1 is recommended for backlight control and configured by default. Do not use D3 for backlight control because it is already in use for touch! It is also not recommended to use D4 for backlight control because it is already in use for PSram on the ESP32-Wrover. Compatible ESP boards # The Lolin TFT 2.4\" header is plug-and-play compatible with these development boards, no need to use any jumper cables: ESP32: - Wemos D1 Mini ESP32 ( only solder the inner row of the pinheaders) - TTGO T7 V1.4 MINI32 ESP32 ( only solder the inner row of the pinheaders) - LOLIN D32 Pro V2.0.0 using an additional TFT cable ESP8266: - Wemos D1 Mini ESP8266 - Lolin D1 Mini Pro ESP8266 V2.0.0 ?> If you have a Lolin TFT 2.4\" Display and a compatible ESP development board, you have all the hardware that is needed. ?> In that case you can skip ahead to the Firmware Installation . Alternative SPI Display # Any common ILI9341 320x240 4-wire SPI touchscreen with XPT2046 Resistive Touch driver can be used, like: - 2.4\" SKU: MSP2402 - 2.8\" SKU: MSP2807 - 3.2\" SKU: MSP3218 You will need to connect the GPIO pins using jumper wires. Experimental MCUs # STM32F407xxT Black Combo # There are several cheap STM32F407xx Black boards available on the market with a TFT display header and accompanying 3.2\" ILI9341 FSMC screen (320x240). This hardware is experimental and not fully supported. Selection of STM32F407 boards. Make sure to purchase a compatible screen, preferably from the same vendor. There are multiple FSMC interfaces: e.g. One is marked TFT , another is marked New-TFT and a third has no markings. The pinout of each header & display is different and are not interchangable! You can however use jumper cables instead, but it won't be plug-and-plug anymore. {: .notice--warning} The following boards are being tested: STM32F407VET6 Black (v2.1) with 512 KB flash STM32F407VET6 Black (v2.0 and v2.1) Purchase Link: AliExpress AliExpress AliExpress (! V2.0 !) Documentation can be found on GitHub STM32F407ZGT6 Black (V3.0) with 1 MB flash STM32F407ZGT6 Black (v3.0) Purchase Link: Documentation can be found on GitHub ?> The STM32F4 boards do not have network connectivity. You can use a compatible network adapter and configure it in PlatformIO. Images of STM32 boards are CC BY-NC 4.0 from https://stm32-base.org/","title":"Hardware"},{"location":"hardware/#recommended-boards","text":"table th:first-of-type { width: 12%; } table th:nth-of-type(2) { width: 22%; } table th:nth-of-type(3) { width: 22%; } table th:nth-of-type(4) { width: 22%; } table th:last-of-type { width: 22%; } Basic Standard Pro Experimental MCU ESP8266 ESP32-WROOM ESP32-WROVER STM32F4 CPU Freq. 80Mhz 240Mhz 240Mhz 168 MHz Ram 80Kb 520Kb 520Kb 192Kb PSRam no no yes no Minimal Flash 4MB 4MB 4MB 512Kb Display ILI9341 SPI ILI9341 SPI ILI9341 SPI ILI9341 FSMC Touch XPT2046 SPI XPT2046 SPI XPT2046 SPI XPT2046 SPI Network Wifi Wifi Wifi Ethernet / Wifi Dev. Board* D1 mini ESP8266 D1 mini ESP32 TTGO T7 v1.4 Mini32 STM32F407VET/ZGT Black Firmware Download Download Download !> * Due to the large number of possible hardware options a selection of 3 popular ESP development boards has been made for the precompiled binaries. ?> Advanced users can build and compile custom configurations using PlatformIO, however this is not currently supported.","title":"Recommended Boards"},{"location":"hardware/#recommended-display","text":"","title":"Recommended Display"},{"location":"hardware/#lolin-tft-24","text":"ILI9341 SPI touchscreens with backlight dimming via PWM are quite cheap to get. An ILI9341 TFT display with SPI is required when using a pre-built binary. The touchcontroller needs to be the XPT2046 Resistive Touch driver. The Lolin TFT 2.4\" is plug-and-play with the 3 recommended ESP development boards. If you have another ESP or MCU, you can still use this display using jumper cables. You can also solder a row of headers at the bottom of the display to plug it into a breadboard. Therefor the Lolin TFT 2.4 Touch Shield is used as the development display of choice.","title":"Lolin TFT 2.4\""},{"location":"hardware/#backlight-control","text":"To use PWM dimming on the Lolin TFT 2.4\" you must solder the TFT-LED pin to either D1, D2 or D4. D1 is recommended for backlight control and configured by default. Do not use D3 for backlight control because it is already in use for touch! It is also not recommended to use D4 for backlight control because it is already in use for PSram on the ESP32-Wrover.","title":"Backlight Control"},{"location":"hardware/#compatible-esp-boards","text":"The Lolin TFT 2.4\" header is plug-and-play compatible with these development boards, no need to use any jumper cables: ESP32: - Wemos D1 Mini ESP32 ( only solder the inner row of the pinheaders) - TTGO T7 V1.4 MINI32 ESP32 ( only solder the inner row of the pinheaders) - LOLIN D32 Pro V2.0.0 using an additional TFT cable ESP8266: - Wemos D1 Mini ESP8266 - Lolin D1 Mini Pro ESP8266 V2.0.0 ?> If you have a Lolin TFT 2.4\" Display and a compatible ESP development board, you have all the hardware that is needed. ?> In that case you can skip ahead to the Firmware Installation .","title":"Compatible ESP boards"},{"location":"hardware/#alternative-spi-display","text":"Any common ILI9341 320x240 4-wire SPI touchscreen with XPT2046 Resistive Touch driver can be used, like: - 2.4\" SKU: MSP2402 - 2.8\" SKU: MSP2807 - 3.2\" SKU: MSP3218 You will need to connect the GPIO pins using jumper wires.","title":"Alternative SPI Display"},{"location":"hardware/#experimental-mcus","text":"","title":"Experimental MCUs"},{"location":"hardware/#stm32f407xxt-black-combo","text":"There are several cheap STM32F407xx Black boards available on the market with a TFT display header and accompanying 3.2\" ILI9341 FSMC screen (320x240). This hardware is experimental and not fully supported. Selection of STM32F407 boards. Make sure to purchase a compatible screen, preferably from the same vendor. There are multiple FSMC interfaces: e.g. One is marked TFT , another is marked New-TFT and a third has no markings. The pinout of each header & display is different and are not interchangable! You can however use jumper cables instead, but it won't be plug-and-plug anymore. {: .notice--warning} The following boards are being tested: STM32F407VET6 Black (v2.1) with 512 KB flash STM32F407VET6 Black (v2.0 and v2.1) Purchase Link: AliExpress AliExpress AliExpress (! V2.0 !) Documentation can be found on GitHub STM32F407ZGT6 Black (V3.0) with 1 MB flash STM32F407ZGT6 Black (v3.0) Purchase Link: Documentation can be found on GitHub ?> The STM32F4 boards do not have network connectivity. You can use a compatible network adapter and configure it in PlatformIO. Images of STM32 boards are CC BY-NC 4.0 from https://stm32-base.org/","title":"STM32F407xxT Black Combo"},{"location":"installation/","text":"Download the firmware # Go to the releases page on Github to download the latest hasp-lvgl binaries. Hasp-lvgl Releases {: .btn .btn--info} There are currently 2 download options, pick the one appropriate for your hardware: - hasp-lvgl-0.2.0-esp32_ili9341_spi.bin + boot files - hasp-lvgl-0.2.0-esp8266_ili9341_spi.bin ?> If no precompiled firmware file is available for your board you can configure, compile and upload the firmware yourself using PlatformIO. Install the firmware # Flash ESP32 # When flashing the ESP32 for the first time, you need to install a bootloader, partitionscheme and application loader: esptool.py --port \"COM1\" erase_flash esptool.py --port \"COM1\" write_flash 0x1000 bootloader_dio_40m.bin --flash_mode dio --flash_freq 40m esptool.py --port \"COM1\" write_flash 0x8000 partitions.bin esptool.py --port \"COM1\" write_flash 0xe000 boot_app0.bin Change COM1 to the correct port on your computer. then flash the actual firmware: esptool.py -p \"COM1\" --baud 921600 write_flash 0x10000 d1-mini-esp32_ili9341_<version>.bin or all previous steps in one long commandline: esptool.py -p \"COM1\" --baud 921600 --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size detect 0x1000 bootloader_dio_40m.bin 0x8000 partitions.bin 0xe000 boot_app0.bin 0x10000 d1-mini-esp32_ili9341_<version>.bin Flash ESP8266 # Unlike the ESP32, for ESP8266 you only need one single .bin file: Using Tasmotizer (Windows) # Using esp-tool.py # esptool.py -p \"COM1\" write_flash --flash_mode qio --flash_size 4m 0x0 d1-mini-esp8266_ili9341_<version>.bin Change COM1 to the correct port on your computer and 4m to the correct size of the internal flash chip. STM32F407 devEbox # ?> There is no precompiled firmware file available for STM32F4 boards. You will need to configure, compile and upload the firmware yourself using PlatformIO. Using Serial # Connect your serial TTL adapter RX and TX pins to PA9 and PA10 of the devEbox. Place the boot jumpers into programming mode Reset the board. Upload the firmware using: Using DFU (USB) # Connect your serial TTL adapter RX and TX pins to PA9 and PA10 of the devEbox. Place the boot jumpers into programming mode Reset the board. Upload the firmware using: Using ST Link (USB) # Install ST Link software Connect the devEbox using the USB port Launch ST Link Select the hasp-lvgl-0.2.0-stm32f407_devEbox_3.2_ili9341_fsmc.bin file Flash the firmware to the board","title":"Installation"},{"location":"installation/#download-the-firmware","text":"Go to the releases page on Github to download the latest hasp-lvgl binaries. Hasp-lvgl Releases {: .btn .btn--info} There are currently 2 download options, pick the one appropriate for your hardware: - hasp-lvgl-0.2.0-esp32_ili9341_spi.bin + boot files - hasp-lvgl-0.2.0-esp8266_ili9341_spi.bin ?> If no precompiled firmware file is available for your board you can configure, compile and upload the firmware yourself using PlatformIO.","title":"Download the firmware"},{"location":"installation/#install-the-firmware","text":"","title":"Install the firmware"},{"location":"installation/#flash-esp32","text":"When flashing the ESP32 for the first time, you need to install a bootloader, partitionscheme and application loader: esptool.py --port \"COM1\" erase_flash esptool.py --port \"COM1\" write_flash 0x1000 bootloader_dio_40m.bin --flash_mode dio --flash_freq 40m esptool.py --port \"COM1\" write_flash 0x8000 partitions.bin esptool.py --port \"COM1\" write_flash 0xe000 boot_app0.bin Change COM1 to the correct port on your computer. then flash the actual firmware: esptool.py -p \"COM1\" --baud 921600 write_flash 0x10000 d1-mini-esp32_ili9341_<version>.bin or all previous steps in one long commandline: esptool.py -p \"COM1\" --baud 921600 --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size detect 0x1000 bootloader_dio_40m.bin 0x8000 partitions.bin 0xe000 boot_app0.bin 0x10000 d1-mini-esp32_ili9341_<version>.bin","title":"Flash ESP32"},{"location":"installation/#flash-esp8266","text":"Unlike the ESP32, for ESP8266 you only need one single .bin file:","title":"Flash ESP8266"},{"location":"installation/#using-tasmotizer-windows","text":"","title":"Using Tasmotizer (Windows)"},{"location":"installation/#using-esp-toolpy","text":"esptool.py -p \"COM1\" write_flash --flash_mode qio --flash_size 4m 0x0 d1-mini-esp8266_ili9341_<version>.bin Change COM1 to the correct port on your computer and 4m to the correct size of the internal flash chip.","title":"Using esp-tool.py"},{"location":"installation/#stm32f407-devebox","text":"?> There is no precompiled firmware file available for STM32F4 boards. You will need to configure, compile and upload the firmware yourself using PlatformIO.","title":"STM32F407 devEbox"},{"location":"installation/#using-serial","text":"Connect your serial TTL adapter RX and TX pins to PA9 and PA10 of the devEbox. Place the boot jumpers into programming mode Reset the board. Upload the firmware using:","title":"Using Serial"},{"location":"installation/#using-dfu-usb","text":"Connect your serial TTL adapter RX and TX pins to PA9 and PA10 of the devEbox. Place the boot jumpers into programming mode Reset the board. Upload the firmware using:","title":"Using DFU (USB)"},{"location":"installation/#using-st-link-usb","text":"Install ST Link software Connect the devEbox using the USB port Launch ST Link Select the hasp-lvgl-0.2.0-stm32f407_devEbox_3.2_ili9341_fsmc.bin file Flash the firmware to the board","title":"Using ST Link (USB)"},{"location":"license/","text":"The MIT License (MIT) Hasp-lvgl is Copyright (c) 2019-2020 fvanroie, netwize.be and contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Hasp-lvgl is based on the existing work of the following open source developers: HASwitchPlate , the original Arduino project, Copyright\u00a9 2019 Allen Derusha. HASwitchPlate is distributed under the terms of the MIT License . LVGL graphics library, Copyright\u00a9 2016 G\u00e1bor Kiss-V\u00e1mosi and Copyright (c) 2020 LVGL LLC. LVGL is distributed under the terms of the MIT License . TFT_eSPI display library, Copyright\u00a9 2020 Bodmer (https://github.com/Bodmer) All rights reserved. TFT_eSPI is distributed under the terms of the FreeBSD License and includes parts from the Adafruit_GFX library , Copyright\u00a9 2012 Adafruit Industries. All rights reserved. Adafruit_GFX is distributed under the terms of the BSD License zi Font Engine Copyright\u00a9 2020 fvanroie, netwize.be MIT License . ArduinoJson Copyright\u00a9 2014-2020 Benoit BLANCHON MIT License . PubSubClient Copyright\u00a9 2008-2015 Nicholas O'Leary MIT License . Logging engine is based on ArduinoLog , Copyright\u00a9 2017,2018 Thijs Elenbaas, MrRobot62, rahuldeo2047, NOX73, dhylands, Josha blemasle, mfalkvidd with modifications by fvanroie, netwize.be. ArduinoLog is distributed under the terms of the MIT License . QR Code generator Copyright\u00a9 Project Nayuki MIT License . AceButton Copyright\u00a9 2018 Brian T. Park MIT License . Custom zi Fonts incorporate Font Awesome , Copyright\u00a9 2017 Dave Gandy. Font Awesome is distributed under the terms of the SIL OFL 1.1 and MIT License . The bootscreen uses the MaterialDesign Icons font, Copyright\u00a9 2014, Austin Andrews (http://materialdesignicons.com/), MaterialDesign Icons font is licensed under the SIL Open Font License, Version 1.1. This website is created with Docsify , Copyright\u00a9 2016 - present cinwell.li MIT License .","title":"License"},{"location":"objects/","text":"There are 2 ways to create an object on the screen: - Uploading a pages.jsonl file onto the internal flash - Use the jsonl command, via MQTT, serial or telnet console Common Properties # These are the common properties shared among all objects: table th:first-of-type { width: 12%; } table th:nth-of-type(2) { width: 12%; } table th:nth-of-type(3) { width: 12%; } table th:nth-of-type(4) { width: 12%; } table th:last-of-type { width: 48%; } Property Value Required Default Description id 0-255 yes n/a ID of the object on this page objid 0-255 yes n/a ID of the object type (see below) page 0-255 no n/a ID of the page the object appears on x int16 no 0 horizontal position on the page y int16 no 0 vertical position on the page w int16 no 0 width of the object h int16 no 0 height of the object enabled true/false no true object is clickable hidden true/false no false object is hidden opacity 0-255 no 255 how much the the object is opaque If the page parameter is not present, the object is placed on the same page as the previous object . If page is not specified for the first object either, the current page being displayed is used. The maximum number of pages and objects is limited by the memory available in the MCU. \"page\":254 indicates that the object is visible on every page. It can be used for example to specify a static menu bar. You can still hide the object on select pages if needed. Objects on this page appear on top of any objects on the underlying page. Object Types # Each object type is an ID that indicates which object type that line represents. Besides the common properties listed above, each object type can have specific properties. Cheatsheet # objid Type 10 Button 11 Checkbox 12 Label 20 Colorpicker 21 Spinner 22 Arc 30 Slider 31 Gauge 32 Progressbar 40 Switch 41 LED 50 Dropdown List 51 Roller Button # objid:10 ![lv_btn](assets/images/objects/lv_ex_btn_1.png) Show Jsonl Code (Click to expand) {\"page\":0,\"comment\":\"---------- Page 0 ----------\"} {\"objid\":10,\"id\":1,\"x\":10,\"y\":45,\"w\":220,\"h\":55,\"toggle\":\"TRUE\",\"txt\":\"Push Me \\uf0a6\"} Property Value Required Default Description toggle boolean no false When enabled, creates a toggle-on/toggle-off button. If false, creates a normal button val int16 no 0 The value: 1 for toggled, 0 for untoggled txt string no \"\" The text of the label mode string no expand The wrapping mode of long text labels Normal Switches send touch events out as they occor. The possible events are: DOWN: Occurs when a button goes from unpressed to being pressed SHORT: The button was released within a short time i.e. a short click has occured LONG: Event is send when the button is still being pressed after the threshold time UP: The button is released after being pressing for a LONG threshold time. LOST: This event occurs when the object looses the focus while the screen is still being touched Toggle Switches only send out their new value (0 or 1) when toggled. Possible wrapping modes are: expand, break, dots, scroll and loop Checkbox # objid:11 {: .align-center} Property Value Required Default Description val int16 no 0 The value: 1 for checked, 0 for unchecked txt string no \"Checkbox\" The label of the checkbox Text Label # objid:12 {: .align-center} Property Value Required Default Description txt string no \"Text\" The text of the label mode string no expand The wrapping mode of long text labels Possible wrapping modes are: expand, break, dots, scroll and loop {\"page\":2,\"id\":1,\"objid\":12,\"h\":24,\"w\":120,\"txt\":\"\\ufe05 Icon Demo\"} Arc # objid:22 {: .align-center} Property Value Required Default Description min int16 no 0 max int16 no 100 val int16 no 0 rotation int16 no 0 type int16 no normal normal, reverse, symetrical Spinner # objid:21 {: .align-center} Property Value Required Default Description speed int16 no 1000 The time for 1 furn in ms direction int16 no 100 0 for clockwise, 1 for counter-clockwise thickness int16 no dep. on theme The width of the arcline Colorpicker # objid:20 {: .align-center} Property Value Required Default Description val uint16 no 0 The selected color in RBG565 format color hex string no 0 The selected color in html format #rrggbb rect boolean no false True if the color picker has a rectangular shape like a slider. False for a circular shape. Slider # objid:30 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0 Double Slider # objid:30 Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0 Gauge # objid:31 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0 Progressbar # objid:32 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0 Switch # objid:40 {: .align-center} Property Value Required Default Description val int16 no 0 The value: 1 for on, 0 for off LED Indicator # objid:41 {: .align-center} Property Value Required Default Description val byte no 0 The brightness of the indicator 0-255 Dropdown List # objid:50 {: .align-center} Property Value Required Default Description options string no \"\" The items separated by \\n val int16 no 0 The number of the selected item txt string no \"\" Read-only The text of the selected item To change the currently selected item, use the val attribute. To change the items in the list, use the options attribute. When the item is changed both val and txt of the newly selected item are send out. Roller # objid:51 {: .align-center} Property Value Required Default Description options string no \"\" The items separated by \\n val int16 no 0 The number of the selected item txt string no \"\" Read-only The text of the selected item rows int8 no 3 The number ow rows that are visible !> A roller does not use the h attribute to set its height but uses the rows attribute instead. To change the currently selected item, use the val attribute. To change the items in the list, use the options attribute. When the item is changed both val and txt of the newly selected item are send out.","title":"Objects"},{"location":"objects/#common-properties","text":"These are the common properties shared among all objects: table th:first-of-type { width: 12%; } table th:nth-of-type(2) { width: 12%; } table th:nth-of-type(3) { width: 12%; } table th:nth-of-type(4) { width: 12%; } table th:last-of-type { width: 48%; } Property Value Required Default Description id 0-255 yes n/a ID of the object on this page objid 0-255 yes n/a ID of the object type (see below) page 0-255 no n/a ID of the page the object appears on x int16 no 0 horizontal position on the page y int16 no 0 vertical position on the page w int16 no 0 width of the object h int16 no 0 height of the object enabled true/false no true object is clickable hidden true/false no false object is hidden opacity 0-255 no 255 how much the the object is opaque If the page parameter is not present, the object is placed on the same page as the previous object . If page is not specified for the first object either, the current page being displayed is used. The maximum number of pages and objects is limited by the memory available in the MCU. \"page\":254 indicates that the object is visible on every page. It can be used for example to specify a static menu bar. You can still hide the object on select pages if needed. Objects on this page appear on top of any objects on the underlying page.","title":"Common Properties"},{"location":"objects/#object-types","text":"Each object type is an ID that indicates which object type that line represents. Besides the common properties listed above, each object type can have specific properties.","title":"Object Types"},{"location":"objects/#cheatsheet","text":"objid Type 10 Button 11 Checkbox 12 Label 20 Colorpicker 21 Spinner 22 Arc 30 Slider 31 Gauge 32 Progressbar 40 Switch 41 LED 50 Dropdown List 51 Roller","title":"Cheatsheet"},{"location":"objects/#button","text":"objid:10 ![lv_btn](assets/images/objects/lv_ex_btn_1.png) Show Jsonl Code (Click to expand) {\"page\":0,\"comment\":\"---------- Page 0 ----------\"} {\"objid\":10,\"id\":1,\"x\":10,\"y\":45,\"w\":220,\"h\":55,\"toggle\":\"TRUE\",\"txt\":\"Push Me \\uf0a6\"} Property Value Required Default Description toggle boolean no false When enabled, creates a toggle-on/toggle-off button. If false, creates a normal button val int16 no 0 The value: 1 for toggled, 0 for untoggled txt string no \"\" The text of the label mode string no expand The wrapping mode of long text labels Normal Switches send touch events out as they occor. The possible events are: DOWN: Occurs when a button goes from unpressed to being pressed SHORT: The button was released within a short time i.e. a short click has occured LONG: Event is send when the button is still being pressed after the threshold time UP: The button is released after being pressing for a LONG threshold time. LOST: This event occurs when the object looses the focus while the screen is still being touched Toggle Switches only send out their new value (0 or 1) when toggled. Possible wrapping modes are: expand, break, dots, scroll and loop","title":"Button"},{"location":"objects/#checkbox","text":"objid:11 {: .align-center} Property Value Required Default Description val int16 no 0 The value: 1 for checked, 0 for unchecked txt string no \"Checkbox\" The label of the checkbox","title":"Checkbox"},{"location":"objects/#text-label","text":"objid:12 {: .align-center} Property Value Required Default Description txt string no \"Text\" The text of the label mode string no expand The wrapping mode of long text labels Possible wrapping modes are: expand, break, dots, scroll and loop {\"page\":2,\"id\":1,\"objid\":12,\"h\":24,\"w\":120,\"txt\":\"\\ufe05 Icon Demo\"}","title":"Text Label"},{"location":"objects/#arc","text":"objid:22 {: .align-center} Property Value Required Default Description min int16 no 0 max int16 no 100 val int16 no 0 rotation int16 no 0 type int16 no normal normal, reverse, symetrical","title":"Arc"},{"location":"objects/#spinner","text":"objid:21 {: .align-center} Property Value Required Default Description speed int16 no 1000 The time for 1 furn in ms direction int16 no 100 0 for clockwise, 1 for counter-clockwise thickness int16 no dep. on theme The width of the arcline","title":"Spinner"},{"location":"objects/#colorpicker","text":"objid:20 {: .align-center} Property Value Required Default Description val uint16 no 0 The selected color in RBG565 format color hex string no 0 The selected color in html format #rrggbb rect boolean no false True if the color picker has a rectangular shape like a slider. False for a circular shape.","title":"Colorpicker"},{"location":"objects/#slider","text":"objid:30 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0","title":"Slider"},{"location":"objects/#double-slider","text":"objid:30 Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0","title":"Double Slider"},{"location":"objects/#gauge","text":"objid:31 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0","title":"Gauge"},{"location":"objects/#progressbar","text":"objid:32 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0","title":"Progressbar"},{"location":"objects/#switch","text":"objid:40 {: .align-center} Property Value Required Default Description val int16 no 0 The value: 1 for on, 0 for off","title":"Switch"},{"location":"objects/#led-indicator","text":"objid:41 {: .align-center} Property Value Required Default Description val byte no 0 The brightness of the indicator 0-255","title":"LED Indicator"},{"location":"objects/#dropdown-list","text":"objid:50 {: .align-center} Property Value Required Default Description options string no \"\" The items separated by \\n val int16 no 0 The number of the selected item txt string no \"\" Read-only The text of the selected item To change the currently selected item, use the val attribute. To change the items in the list, use the options attribute. When the item is changed both val and txt of the newly selected item are send out.","title":"Dropdown List"},{"location":"objects/#roller","text":"objid:51 {: .align-center} Property Value Required Default Description options string no \"\" The items separated by \\n val int16 no 0 The number of the selected item txt string no \"\" Read-only The text of the selected item rows int8 no 3 The number ow rows that are visible !> A roller does not use the h attribute to set its height but uses the rows attribute instead. To change the currently selected item, use the val attribute. To change the items in the list, use the options attribute. When the item is changed both val and txt of the newly selected item are send out.","title":"Roller"},{"location":"pages/","text":"The initial layout of the pages is defined by creating a special file on the SPIFFS file system. This layout is displayed each time HASP starts up. You can upload this file (and other resource assets like fonts and images) in the web interface Configuration > HASP Settings. pages.jsonl # The location of this file is /pages.jsonl in the root of the filesystem. It uses the JSON Lines format with one json object per line. Each line should contain exactly one valid json object and end with a line-break \\n (not a comma) . The file is interpreted line-by-line . When a malformed line is encountered, the processing of the rest of the file stops. If you are missing objects, check the logs to see which line was processed last. You probably have a typo in the following line which blocks parsing the rest of the file. ?> The complete file in its entirety is not a valid json file. ?> Each individual line however must be a valid json object. ?> The file extension is .jsonl and not .json . Objects # Each line in pages.jsonl creates one object on a page and has to be in the json format. The order of objects dictates the layer on the page from bottom to top. Example Objects {\"page\":2,\"id\":1,\"objid\":12,\"x\":5,\"y\":20,\"h\":50,\"w\":50,\"enabled\":\"true\",\"hidden\":\"false\"} {\"page\":2,\"id\":2,\"objid\":50,\"x\":5,\"y\":120,\"h\":90,\"w\":50,\"enabled\":\"false\",\"hidden\":\"false\"} Once the object is created, you can reference it with p[x].b[y] where x is the pagenumber and y is the id of the object. for example: p[2].b[1].w=100 p[2].b[2].hidden=true Comments # If any of the required id or objid properties are missing - and the line is still valid json - then it is interpreted as a comment. You can also use the page parameter in a comment to set the default page for new objects that don't have a page parameter. Example 1: Add a comment on a single line that is ignored. {\"comment\":\" ----------- Page 2 layout ------------\"} Example 2: Set the default page for next object(s) to 3 besides adding a comment as well. {\"page\":3,\"comment\":\" ---- My Awesome Color Picker Layout ----\"} If you then omit the page parameter in the lines below this comment, those objects will appear by default on page 3 . ?> If the line is not valid json, the parsing of the rest of the file is also stopped. Blank Lines # Blank lines are allowed for readability and are ignored.","title":"Pages"},{"location":"pages/#pagesjsonl","text":"The location of this file is /pages.jsonl in the root of the filesystem. It uses the JSON Lines format with one json object per line. Each line should contain exactly one valid json object and end with a line-break \\n (not a comma) . The file is interpreted line-by-line . When a malformed line is encountered, the processing of the rest of the file stops. If you are missing objects, check the logs to see which line was processed last. You probably have a typo in the following line which blocks parsing the rest of the file. ?> The complete file in its entirety is not a valid json file. ?> Each individual line however must be a valid json object. ?> The file extension is .jsonl and not .json .","title":"pages.jsonl"},{"location":"pages/#objects","text":"Each line in pages.jsonl creates one object on a page and has to be in the json format. The order of objects dictates the layer on the page from bottom to top. Example Objects {\"page\":2,\"id\":1,\"objid\":12,\"x\":5,\"y\":20,\"h\":50,\"w\":50,\"enabled\":\"true\",\"hidden\":\"false\"} {\"page\":2,\"id\":2,\"objid\":50,\"x\":5,\"y\":120,\"h\":90,\"w\":50,\"enabled\":\"false\",\"hidden\":\"false\"} Once the object is created, you can reference it with p[x].b[y] where x is the pagenumber and y is the id of the object. for example: p[2].b[1].w=100 p[2].b[2].hidden=true","title":"Objects"},{"location":"pages/#comments","text":"If any of the required id or objid properties are missing - and the line is still valid json - then it is interpreted as a comment. You can also use the page parameter in a comment to set the default page for new objects that don't have a page parameter. Example 1: Add a comment on a single line that is ignored. {\"comment\":\" ----------- Page 2 layout ------------\"} Example 2: Set the default page for next object(s) to 3 besides adding a comment as well. {\"page\":3,\"comment\":\" ---- My Awesome Color Picker Layout ----\"} If you then omit the page parameter in the lines below this comment, those objects will appear by default on page 3 . ?> If the line is not valid json, the parsing of the rest of the file is also stopped.","title":"Comments"},{"location":"pages/#blank-lines","text":"Blank lines are allowed for readability and are ignored.","title":"Blank Lines"},{"location":"styling/","text":"Styling Properties # You can adjust the appearance of objects by changing the foreground, background and/or border color of each object. Object Types # Each object type is an ID that indicates which object type that line represents. Besides the common properties listed above, each object type can have specific properties. Button # objid:10 A button can have 3 states. All the following parameters can be appended by a number to change the appearance of that state only: - 0: Released - 1: Pressed - 2: Disabled Or if the postfix index is ommited, then the default state 0 or Pressed is used. A button can accept the attributes of the following groups: - Background - Border - Outline - Shadow - Value Attribute groups # Padding and Margin # Padding sets the space on the inner sides of the edges. It means \"I don't want my children too close to my sides, so keep this space\".Padding inner set the \"gap\" between the children. Margin sets the space on the outer side of the edges. It means \"I want this space around me\". Objects use them to set spacing. See the documentation of the objects for the details. Property Type Required Default Description pad_top int Set the padding on the top pad_bottom int Set the padding on the bottom pad_left int Set the padding on the left pad_right int Set the padding on the right pad_inner int Set the padding inside the object between children margin_top int Set the margin on the top margin_bottom int Set the margin on the bottom margin_left int Set the margin on the left margin_right int Set the margin on the right Background # Property Type Required Default Description bg_opa byte no \"\" The background opacity level bg_color color no true The background color bg_grad_color color no 0 The background gradient color bg_grad_dir [0..2] no expand 0 = None, 1 = Horizontal, 2 = Vertical bg_grad_stop byte no expand Specifies where the gradient should stop. 0: at left/top most position, 255: at right/bottom most position. Default value: 255. bg_main_stop byte no expand Specifies where should the gradient start. 0: at left/top most position, 255: at right/bottom most position. Default value: 0. Border # The border is drawn on top of the background. It has radius rounding. Property Type Required Default Description border_color color Specifies the color of the border border_opa byte Specifies opacity of the border border_width byte Set the width of the border border_side byte Specifies which sides of the border to draw. Can be 0=LV_BORDER_SIDE_NONE/1=LEFT/2=RIGHT/4=TOP/8=BOTTOM/15=FULL. A sum of these values is also possible to select specific sides. border_post bool If true the border will be drawn after all children have been drawn. Shadow # The shadow is a blurred area under the object. Property Type Required Default Description shadow_color color Specifies the color of the shadow shadow_opa byte Specifies opacity of the shadow shadow_width int16 Set the width (blur size) of the outline shadow_ofs_x int16 Set the an X offset for the shadow shadow_ofs_y int16 Set the an Y offset for the shadow shadow_spread byte make the shadow larger than the background in every direction by this value Value # Value is an arbitrary text drawn to the background. It can be a lightweighted replacement of creating label objects. Property Type Required Default Description value_str string Text to display. Only the pointer is saved! (Don't use local variable with lv_style_set_value_str, instead use static, global or dynamically allocated data) value_color color Color of the text value_opa byte Opacity level of the text [0-255] value_font byte The font ID value_letter_space int Letter space of the text value_line_space int Line space of the text value_align align Alignment of the text. Can be LV_ALIGN_.... Default value: LV_ALIGN_CENTER. value_ofs_x int X offset from the original position of the alignment value_ofs_y int Y offset from the original position of the alignment Text # Properties for textual object. Property Type Required Default Description text_color color Color of the text text_opa byte Opacity level of the text [0-255] text_font byte Font ID text_letter_space int Letter space of the text text_line_space int Line space of the text text_decor byte Add text decoration. 0=None, 1=Underline, 2=Strikethrough, 3=Underline&Strikethrough text_sel_color color Set background color of text selection Line # n/a Image # n/a Outline # n/a Pattern # n/a Transitions # n/a Checkbox # objid:11 {: .align-center} Property Value Required Default Description val int16 no 0 The value: 1 for checked, 0 for unchecked txt string no \"Checkbox\" The label of the checkbox Text Label # objid:12 {: .align-center} Property Value Required Default Description txt string no \"Text\" The text of the label mode string no expand The wrapping mode of long text labels Possible wrapping modes are: expand, break, dots, scroll and loop {\"page\":2,\"id\":1,\"objid\":12,\"h\":24,\"w\":120,\"txt\":\"\\ufe05 Icon Demo\"} Spinner # objid:21 {: .align-center} Property Value Required Default Description speed int16 no 1000 The time for 1 furn in ms direction int16 no 100 0 for clockwise, 1 for counter-clockwise thickness int16 no dep. on theme The width of the arcline Colorpicker # objid:20 {: .align-center} Property Value Required Default Description val uint16 no 0 The selected color in RBG565 format color hex string no 0 The selected color in html format #rrggbb rect boolean no false True if the color picker has a rectangular shape like a slider. False for a circular shape. Slider # objid:30 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0 Double Slider # objid:30 Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0 Gauge # objid:31 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0 Progressbar # objid:32 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0 Switch # objid:40 {: .align-center} Property Value Required Default Description val int16 no 0 The value: 1 for on, 0 for off LED Indicator # objid:41 {: .align-center} Property Value Required Default Description val byte no 0 The brightness of the indicator 0-255 Dropdown List # objid:50 {: .align-center} Property Value Required Default Description options string no \"\" The items separated by \\n val int16 no 0 The number of the selected item txt string no \"\" Read-only The text of the selected item To change the currently selected item, use the val attribute. To change the items in the list, use the options attribute. When the item is changed both val and txt of the newly selected item are send out. Roller # objid:51 {: .align-center} Property Value Required Default Description options string no \"\" The items separated by \\n val int16 no 0 The number of the selected item txt string no \"\" Read-only The text of the selected item rows int8 no 3 The number ow rows that are visible ?> A roller does not use the h attribute to set its height, but uses the rows to set the visible number of rows instead. To change the currently selected item, use the val attribute. To change the items in the list, use the options attribute. When the item is changed both val and txt of the newly selected item are send out. Example file # This is a real-world demo pages.jsonl file: {\"comment\":\"---------- Page 0 ----------\"} {\"objid\":10,\"id\":1,\"page\":0,\"x\":10,\"y\":45,\"w\":220,\"h\":55,\"toggle\":\"TRUE\",\"txt\":\"Toggle Me \\uf0a6\"} {\"objid\":11,\"id\":2,\"page\":0,\"x\":10,\"y\":100,\"w\":220,\"h\":55,\"txt\":\"Checkbox 1\"} {\"objid\":12,\"id\":3,\"page\":0,\"x\":10,\"y\":10,\"w\":220,\"h\":30,\"txt\":\"Text Label 1\",\"align\":1,\"padh\":50} {\"objid\":40,\"id\":4,\"page\":0,\"x\":70,\"y\":205,\"w\":100,\"h\":55} {\"objid\":41,\"id\":5,\"page\":0,\"x\":10,\"y\":205,\"w\":55,\"h\":55} {\"objid\":50,\"id\":6,\"page\":0,\"x\":10,\"y\":150,\"w\":150,\"txt\":\"\\uf007 Option 1\\n\\uf007 Option 2\\n\\uf007 Option 3\"} {\"objid\":21,\"id\":7,\"page\":0,\"x\":165,\"y\":140,\"w\":70,\"h\":70} {\"comment\":\"---------- Page 1 ----------\"} {\"objid\":30,\"id\":1,\"page\":1,\"x\":10,\"y\":170,\"w\":200,\"h\":50} {\"objid\":31,\"id\":3,\"page\":1,\"x\":13,\"y\":10,\"w\":100,\"h\":100} {\"objid\":32,\"id\":4,\"page\":1,\"x\":10,\"y\":110,\"w\":200,\"h\":50} {\"objid\":33,\"id\":5,\"page\":1,\"x\":127,\"y\":10,\"w\":100,\"h\":100} {\"objid\":12,\"id\":10,\"page\":1,\"x\":0,\"y\":0,\"w\":70,\"h\":50,\"parentid\":5,\"txt\":\"\\uf00c OK\"} {\"comment\":\"---------- Page 2 ----------\"} {\"objid\":20,\"id\":1,\"page\":2,\"x\":20,\"y\":0,\"w\":200,\"h\":200} {\"objid\":20,\"id\":2,\"page\":2,\"x\":20,\"y\":210,\"w\":200,\"h\":50,\"rect\":\"TRUE\"} {\"comment\":\"---------- Page 3 ----------\"} {\"objid\":50,\"id\":1,\"page\":3,\"x\":10,\"y\":10,\"w\":220,\"txt\":\"Spring\\nSummer\\nAutumn\\nWinter\"} {\"objid\":51,\"id\":2,\"page\":3,\"x\":40,\"y\":50,\"w\":160,\"txt\":\"2018\\n2019\\n2020\\n2021\\n2022\\n2023\\n2024\",\"rows\":4} {\"comment\":\"---------- Page 254 ----------\"} {\"objid\":10,\"id\":1,\"page\":254,\"x\":0,\"y\":270,\"w\":75,\"h\":50,\"opacity\":100,\"txt\":\"\\uF053 Prev\"} {\"objid\":10,\"id\":2,\"page\":254,\"x\":75,\"y\":270,\"w\":90,\"h\":50,\"opacity\":100,\"txt\":\"\\uF015 Home\"} {\"objid\":10,\"id\":3,\"page\":254,\"x\":165,\"y\":270,\"w\":75,\"h\":50,\"opacity\":100,\"txt\":\"Next \\uF054\"}","title":"Styling"},{"location":"styling/#styling-properties","text":"You can adjust the appearance of objects by changing the foreground, background and/or border color of each object.","title":"Styling Properties"},{"location":"styling/#object-types","text":"Each object type is an ID that indicates which object type that line represents. Besides the common properties listed above, each object type can have specific properties.","title":"Object Types"},{"location":"styling/#button","text":"objid:10 A button can have 3 states. All the following parameters can be appended by a number to change the appearance of that state only: - 0: Released - 1: Pressed - 2: Disabled Or if the postfix index is ommited, then the default state 0 or Pressed is used. A button can accept the attributes of the following groups: - Background - Border - Outline - Shadow - Value","title":"Button"},{"location":"styling/#attribute-groups","text":"","title":"Attribute groups"},{"location":"styling/#padding-and-margin","text":"Padding sets the space on the inner sides of the edges. It means \"I don't want my children too close to my sides, so keep this space\".Padding inner set the \"gap\" between the children. Margin sets the space on the outer side of the edges. It means \"I want this space around me\". Objects use them to set spacing. See the documentation of the objects for the details. Property Type Required Default Description pad_top int Set the padding on the top pad_bottom int Set the padding on the bottom pad_left int Set the padding on the left pad_right int Set the padding on the right pad_inner int Set the padding inside the object between children margin_top int Set the margin on the top margin_bottom int Set the margin on the bottom margin_left int Set the margin on the left margin_right int Set the margin on the right","title":"Padding and Margin"},{"location":"styling/#background","text":"Property Type Required Default Description bg_opa byte no \"\" The background opacity level bg_color color no true The background color bg_grad_color color no 0 The background gradient color bg_grad_dir [0..2] no expand 0 = None, 1 = Horizontal, 2 = Vertical bg_grad_stop byte no expand Specifies where the gradient should stop. 0: at left/top most position, 255: at right/bottom most position. Default value: 255. bg_main_stop byte no expand Specifies where should the gradient start. 0: at left/top most position, 255: at right/bottom most position. Default value: 0.","title":"Background"},{"location":"styling/#border","text":"The border is drawn on top of the background. It has radius rounding. Property Type Required Default Description border_color color Specifies the color of the border border_opa byte Specifies opacity of the border border_width byte Set the width of the border border_side byte Specifies which sides of the border to draw. Can be 0=LV_BORDER_SIDE_NONE/1=LEFT/2=RIGHT/4=TOP/8=BOTTOM/15=FULL. A sum of these values is also possible to select specific sides. border_post bool If true the border will be drawn after all children have been drawn.","title":"Border"},{"location":"styling/#shadow","text":"The shadow is a blurred area under the object. Property Type Required Default Description shadow_color color Specifies the color of the shadow shadow_opa byte Specifies opacity of the shadow shadow_width int16 Set the width (blur size) of the outline shadow_ofs_x int16 Set the an X offset for the shadow shadow_ofs_y int16 Set the an Y offset for the shadow shadow_spread byte make the shadow larger than the background in every direction by this value","title":"Shadow"},{"location":"styling/#value","text":"Value is an arbitrary text drawn to the background. It can be a lightweighted replacement of creating label objects. Property Type Required Default Description value_str string Text to display. Only the pointer is saved! (Don't use local variable with lv_style_set_value_str, instead use static, global or dynamically allocated data) value_color color Color of the text value_opa byte Opacity level of the text [0-255] value_font byte The font ID value_letter_space int Letter space of the text value_line_space int Line space of the text value_align align Alignment of the text. Can be LV_ALIGN_.... Default value: LV_ALIGN_CENTER. value_ofs_x int X offset from the original position of the alignment value_ofs_y int Y offset from the original position of the alignment","title":"Value"},{"location":"styling/#text","text":"Properties for textual object. Property Type Required Default Description text_color color Color of the text text_opa byte Opacity level of the text [0-255] text_font byte Font ID text_letter_space int Letter space of the text text_line_space int Line space of the text text_decor byte Add text decoration. 0=None, 1=Underline, 2=Strikethrough, 3=Underline&Strikethrough text_sel_color color Set background color of text selection","title":"Text"},{"location":"styling/#line","text":"n/a","title":"Line"},{"location":"styling/#image","text":"n/a","title":"Image"},{"location":"styling/#outline","text":"n/a","title":"Outline"},{"location":"styling/#pattern","text":"n/a","title":"Pattern"},{"location":"styling/#transitions","text":"n/a","title":"Transitions"},{"location":"styling/#checkbox","text":"objid:11 {: .align-center} Property Value Required Default Description val int16 no 0 The value: 1 for checked, 0 for unchecked txt string no \"Checkbox\" The label of the checkbox","title":"Checkbox"},{"location":"styling/#text-label","text":"objid:12 {: .align-center} Property Value Required Default Description txt string no \"Text\" The text of the label mode string no expand The wrapping mode of long text labels Possible wrapping modes are: expand, break, dots, scroll and loop {\"page\":2,\"id\":1,\"objid\":12,\"h\":24,\"w\":120,\"txt\":\"\\ufe05 Icon Demo\"}","title":"Text Label"},{"location":"styling/#spinner","text":"objid:21 {: .align-center} Property Value Required Default Description speed int16 no 1000 The time for 1 furn in ms direction int16 no 100 0 for clockwise, 1 for counter-clockwise thickness int16 no dep. on theme The width of the arcline","title":"Spinner"},{"location":"styling/#colorpicker","text":"objid:20 {: .align-center} Property Value Required Default Description val uint16 no 0 The selected color in RBG565 format color hex string no 0 The selected color in html format #rrggbb rect boolean no false True if the color picker has a rectangular shape like a slider. False for a circular shape.","title":"Colorpicker"},{"location":"styling/#slider","text":"objid:30 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0","title":"Slider"},{"location":"styling/#double-slider","text":"objid:30 Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0","title":"Double Slider"},{"location":"styling/#gauge","text":"objid:31 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0","title":"Gauge"},{"location":"styling/#progressbar","text":"objid:32 {: .align-center} Property Value Required Default min int16 no 0 max int16 no 100 val int16 no 0","title":"Progressbar"},{"location":"styling/#switch","text":"objid:40 {: .align-center} Property Value Required Default Description val int16 no 0 The value: 1 for on, 0 for off","title":"Switch"},{"location":"styling/#led-indicator","text":"objid:41 {: .align-center} Property Value Required Default Description val byte no 0 The brightness of the indicator 0-255","title":"LED Indicator"},{"location":"styling/#dropdown-list","text":"objid:50 {: .align-center} Property Value Required Default Description options string no \"\" The items separated by \\n val int16 no 0 The number of the selected item txt string no \"\" Read-only The text of the selected item To change the currently selected item, use the val attribute. To change the items in the list, use the options attribute. When the item is changed both val and txt of the newly selected item are send out.","title":"Dropdown List"},{"location":"styling/#roller","text":"objid:51 {: .align-center} Property Value Required Default Description options string no \"\" The items separated by \\n val int16 no 0 The number of the selected item txt string no \"\" Read-only The text of the selected item rows int8 no 3 The number ow rows that are visible ?> A roller does not use the h attribute to set its height, but uses the rows to set the visible number of rows instead. To change the currently selected item, use the val attribute. To change the items in the list, use the options attribute. When the item is changed both val and txt of the newly selected item are send out.","title":"Roller"},{"location":"styling/#example-file","text":"This is a real-world demo pages.jsonl file: {\"comment\":\"---------- Page 0 ----------\"} {\"objid\":10,\"id\":1,\"page\":0,\"x\":10,\"y\":45,\"w\":220,\"h\":55,\"toggle\":\"TRUE\",\"txt\":\"Toggle Me \\uf0a6\"} {\"objid\":11,\"id\":2,\"page\":0,\"x\":10,\"y\":100,\"w\":220,\"h\":55,\"txt\":\"Checkbox 1\"} {\"objid\":12,\"id\":3,\"page\":0,\"x\":10,\"y\":10,\"w\":220,\"h\":30,\"txt\":\"Text Label 1\",\"align\":1,\"padh\":50} {\"objid\":40,\"id\":4,\"page\":0,\"x\":70,\"y\":205,\"w\":100,\"h\":55} {\"objid\":41,\"id\":5,\"page\":0,\"x\":10,\"y\":205,\"w\":55,\"h\":55} {\"objid\":50,\"id\":6,\"page\":0,\"x\":10,\"y\":150,\"w\":150,\"txt\":\"\\uf007 Option 1\\n\\uf007 Option 2\\n\\uf007 Option 3\"} {\"objid\":21,\"id\":7,\"page\":0,\"x\":165,\"y\":140,\"w\":70,\"h\":70} {\"comment\":\"---------- Page 1 ----------\"} {\"objid\":30,\"id\":1,\"page\":1,\"x\":10,\"y\":170,\"w\":200,\"h\":50} {\"objid\":31,\"id\":3,\"page\":1,\"x\":13,\"y\":10,\"w\":100,\"h\":100} {\"objid\":32,\"id\":4,\"page\":1,\"x\":10,\"y\":110,\"w\":200,\"h\":50} {\"objid\":33,\"id\":5,\"page\":1,\"x\":127,\"y\":10,\"w\":100,\"h\":100} {\"objid\":12,\"id\":10,\"page\":1,\"x\":0,\"y\":0,\"w\":70,\"h\":50,\"parentid\":5,\"txt\":\"\\uf00c OK\"} {\"comment\":\"---------- Page 2 ----------\"} {\"objid\":20,\"id\":1,\"page\":2,\"x\":20,\"y\":0,\"w\":200,\"h\":200} {\"objid\":20,\"id\":2,\"page\":2,\"x\":20,\"y\":210,\"w\":200,\"h\":50,\"rect\":\"TRUE\"} {\"comment\":\"---------- Page 3 ----------\"} {\"objid\":50,\"id\":1,\"page\":3,\"x\":10,\"y\":10,\"w\":220,\"txt\":\"Spring\\nSummer\\nAutumn\\nWinter\"} {\"objid\":51,\"id\":2,\"page\":3,\"x\":40,\"y\":50,\"w\":160,\"txt\":\"2018\\n2019\\n2020\\n2021\\n2022\\n2023\\n2024\",\"rows\":4} {\"comment\":\"---------- Page 254 ----------\"} {\"objid\":10,\"id\":1,\"page\":254,\"x\":0,\"y\":270,\"w\":75,\"h\":50,\"opacity\":100,\"txt\":\"\\uF053 Prev\"} {\"objid\":10,\"id\":2,\"page\":254,\"x\":75,\"y\":270,\"w\":90,\"h\":50,\"opacity\":100,\"txt\":\"\\uF015 Home\"} {\"objid\":10,\"id\":3,\"page\":254,\"x\":165,\"y\":270,\"w\":75,\"h\":50,\"opacity\":100,\"txt\":\"Next \\uF054\"}","title":"Example file"},{"location":"wifi-setup/","text":"At first boot, when no wifi setup is found, the device will create an initial Access Point for configuring the device. If the touchscreen is properly connected it will display a QR code, along with a temporary SSID and password, to connect to the device. Either use the touchscreen interface or connect via a webbrowser to setup the credentials for your local wifi access point: Using Touchscreen # Tap on the screen to start a Touch Calibration sequence: Precisely touch the 4 courners as indicated Use the on-screen keyboard to enter your local SSID and password Tap on the Checkmark button in the lower righthand corner to save the settings The device will validate the entered credentials and reboot if they are correct. Using WiFi Access-Point # Connect to the temporary Access Point by scanning the QR on the display, if available. Or Check the serial log for the SSID and password to connect. Browse to http://192.168.4.1 Enter your local SSID and password for joining the device to your wireless network Click Save Settings The device will automatically reboot and connect to your wireless LAN Using Command line # You can also directly configure the wifi settings via the serial console: ssid myAccessPointName pass myWifiPassword reboot [!TIP] To skip this step, wifi credentials can be saved into the .bin file when you compile the firmware yourself.","title":"Wi-Fi Setup"},{"location":"wifi-setup/#using-touchscreen","text":"Tap on the screen to start a Touch Calibration sequence: Precisely touch the 4 courners as indicated Use the on-screen keyboard to enter your local SSID and password Tap on the Checkmark button in the lower righthand corner to save the settings The device will validate the entered credentials and reboot if they are correct.","title":"Using Touchscreen"},{"location":"wifi-setup/#using-wifi-access-point","text":"Connect to the temporary Access Point by scanning the QR on the display, if available. Or Check the serial log for the SSID and password to connect. Browse to http://192.168.4.1 Enter your local SSID and password for joining the device to your wireless network Click Save Settings The device will automatically reboot and connect to your wireless LAN","title":"Using WiFi Access-Point"},{"location":"wifi-setup/#using-command-line","text":"You can also directly configure the wifi settings via the serial console: ssid myAccessPointName pass myWifiPassword reboot [!TIP] To skip this step, wifi credentials can be saved into the .bin file when you compile the firmware yourself.","title":"Using Command line"},{"location":"displays/MHS4001/","text":"6 GPIOs are required to drive the SPI display. One additional GPIO is needed for the XPT2046 touch sensor. Including the Vcc and Gnd pins, a total of 12 connections need to be made to the MCU: Pin Configuration # Pin Function ESP32 Pin Config Name Display Pin 1 Module Power 3.3V 3.3V 3.3V 2 Module Power 5v 5V 5V 3 Not connected NC 4 ~~LED Backlight PWM 5V ~~ ~~TFT_BCKL~~ 5V 5-10 Not connected NC 11 Touch Interrupt NC TP_IRQ 12-13 Not connected NC 14 Module Ground GND GND 15-16 Not connected NC 17 Module Power 3.3V 3.3V 18 Data Command control pin GPIO4 TFT_DC LCD_RS 19 SPI Master Out Slave In GPIO23 TFT_MOSI LCD/SI/TP_SI 20 Not connected NC 21 Touch Panel Slave Out GPIO19 TFT_MISO TP_SO 22 LCD Reset pin GPIO32 TFT_RST RST 23 SPI Clock GPIO18 TFT_SCLK LCD_SCK/TP_SCK 24 Chip select control pin GPIO15 TFT_CS LCD_CS 25 Module Ground GND GND 26 Touch Chip Select GPIO22 TOUCH_CS TP_CS ~~By default, pin 4 is normally connected to 5V. This turns the display backlight LED on all time. In order to control the backlight you can drive pin 4 of the display using a PNP transistor. The electronics circuit needed is not part of this diagram.~~ SPI MISO, MOSI and SCLK are shared between the touch controller and the lcd controller. LCD Configuration # The lcd_config.ini file specifies the different properties of the display, except for the actual pin configuration: raspberrypi = -D RPI_DISPLAY_TYPE=1 -D ST7796_DRIVER=1 -D TFT_WIDTH=320 -D TFT_HEIGHT=480 -D TFT_ROTATION=0 ; 0=0, 1=90, 2=180 or 3=270 degree -D SPI_FREQUENCY=80000000 -D SPI_TOUCH_FREQUENCY=2500000 -D USER_SETUP_LOADED=1 -D TOUCH_DRIVER=2046 ; XPT2046 Resistive touch panel driver -D SUPPORT_TRANSACTIONS HASP build_flags # Specify the LCD Configuration to use and define the 7 GPIOs in the environment build flags: build_flags = ${flags.esp32_flags} ; -- TFT_eSPI build options ------------------------ ${lcd.raspberrypi} ${esp32.vspi} ; Use VSPI hardware SPI bus -D TFT_CS=15 -D TFT_DC=4 -D TFT_RST=32 -D TFT_BCKL=-1 ; None -D TOUCH_CS=22","title":"MHS4001"},{"location":"displays/MHS4001/#pin-configuration","text":"Pin Function ESP32 Pin Config Name Display Pin 1 Module Power 3.3V 3.3V 3.3V 2 Module Power 5v 5V 5V 3 Not connected NC 4 ~~LED Backlight PWM 5V ~~ ~~TFT_BCKL~~ 5V 5-10 Not connected NC 11 Touch Interrupt NC TP_IRQ 12-13 Not connected NC 14 Module Ground GND GND 15-16 Not connected NC 17 Module Power 3.3V 3.3V 18 Data Command control pin GPIO4 TFT_DC LCD_RS 19 SPI Master Out Slave In GPIO23 TFT_MOSI LCD/SI/TP_SI 20 Not connected NC 21 Touch Panel Slave Out GPIO19 TFT_MISO TP_SO 22 LCD Reset pin GPIO32 TFT_RST RST 23 SPI Clock GPIO18 TFT_SCLK LCD_SCK/TP_SCK 24 Chip select control pin GPIO15 TFT_CS LCD_CS 25 Module Ground GND GND 26 Touch Chip Select GPIO22 TOUCH_CS TP_CS ~~By default, pin 4 is normally connected to 5V. This turns the display backlight LED on all time. In order to control the backlight you can drive pin 4 of the display using a PNP transistor. The electronics circuit needed is not part of this diagram.~~ SPI MISO, MOSI and SCLK are shared between the touch controller and the lcd controller.","title":"Pin Configuration"},{"location":"displays/MHS4001/#lcd-configuration","text":"The lcd_config.ini file specifies the different properties of the display, except for the actual pin configuration: raspberrypi = -D RPI_DISPLAY_TYPE=1 -D ST7796_DRIVER=1 -D TFT_WIDTH=320 -D TFT_HEIGHT=480 -D TFT_ROTATION=0 ; 0=0, 1=90, 2=180 or 3=270 degree -D SPI_FREQUENCY=80000000 -D SPI_TOUCH_FREQUENCY=2500000 -D USER_SETUP_LOADED=1 -D TOUCH_DRIVER=2046 ; XPT2046 Resistive touch panel driver -D SUPPORT_TRANSACTIONS","title":"LCD Configuration"},{"location":"displays/MHS4001/#hasp-build_flags","text":"Specify the LCD Configuration to use and define the 7 GPIOs in the environment build flags: build_flags = ${flags.esp32_flags} ; -- TFT_eSPI build options ------------------------ ${lcd.raspberrypi} ${esp32.vspi} ; Use VSPI hardware SPI bus -D TFT_CS=15 -D TFT_DC=4 -D TFT_RST=32 -D TFT_BCKL=-1 ; None -D TOUCH_CS=22","title":"HASP build_flags"},{"location":"displays/MRB3511/","text":"14 GPIOs are required to drive the 8-bit parallel display. Another 3 GPIOs are needed for the I\u00b2C touch sensor. Including the Vcc, Gnd an Rst pins, a total of 23 connections need to be made to the MCU: Pin Configuration # Pin Function ESP32 Pin Config Name Display Pin 1 Chip select control pin GPIO33 TFT_CS CS 2 Data Command control pin GPIO15 TFT_DC RS 3 Write control pin GPIO04 TFT_WR WR 4 Read control pin GPIO02 TFT_RD RD 5 LCD Reset pin GPIO32 TFT_RST RST 6 GPIO12 TFT_D0 D0 7 GPIO13 TFT_D1 D1 8 GPIO26 TFT_D2 D2 9 8-bit parallel data GPIO25 TFT_D3 D3 10 GPIO17 TFT_D4 D4 11 GPIO16 TFT_D5 D5 12 GPIO27 TFT_D6 D6 13 GPIO14 TFT_D7 D7 14-21 Not used, don't connect NC D8-15 22 Module Ground GND GND 23 LED Backlight PWM GPIO5 TFT_BCKL BL 24-25 Module Power - VDD 26-27 Module Ground GND GND 28-29 Not connected NC 30 IO, I\u00b2C SDA GPIO21 TOUCH_SDA SDA 31 Touch Chip Interrupt GPIO34 TOUCH_IRQ INT 32 Not connected NC 33 Touch IC Reset 3.3V CRST 34 IO, I\u00b2C SCL GPIO22 TOUCH_SCL SCL You need to desolder the 0R resistor on the back side of the panel from the 16-bit position. Then resolder the 0R resistor in the 8-bit position. There are no pins shared between the touch controller and the lcd controller. LCD Configuration # The lcd_config.ini file specifies the different properties of the display, except for the actual pin configuration: mrb3511 = -D ESP32_PARALLEL=1 -D ILI9488_DRIVER=1 -D TFT_WIDTH=320 -D TFT_HEIGHT=480 -D TFT_ROTATION=0 ; 0=0, 1=90, 2=180 or 3=270 degree -D USER_SETUP_LOADED=1 -D TOUCH_DRIVER=911 ; GT911 Capacitive touch panel driver -D SUPPORT_TRANSACTIONS HASP build_flags # Specify the LCD Configuration to use and define the 17 GPIOs in the environment build flags: build_flags = ${flags.esp32_flags} ; -- TFT_eSPI build options ------------------------ ${lcd.mrb3511} -D TFT_BCKL=5 ;None, configurable via web UI (e.g. 2 for D4) -D TFT_CS=33 ; Chip select control pin -D TFT_DC=15 ; =RS; Data Command control pin - must use a pin in the range 0-31 -D TFT_RST=32 ; Reset pin -D TFT_WR=4 ; Write strobe control pin - must use a pin in the range 0-31 -D TFT_RD=2 -D TFT_D0=12 ; Must use pins in the range 0-31 for the data bus -D TFT_D1=13 ; so a single register write sets/clears all bits -D TFT_D2=26 -D TFT_D3=25 -D TFT_D4=17 -D TFT_D5=16 -D TFT_D6=27 -D TFT_D7=14 -D TOUCH_SDA=21 -D TOUCH_SCL=22 -D TOUCH_IRQ=34 ; use 34-39 as these are input only pins -D TOUCH_RST=-1 ; not used, connected to 3.3V","title":"MRB3511"},{"location":"displays/MRB3511/#pin-configuration","text":"Pin Function ESP32 Pin Config Name Display Pin 1 Chip select control pin GPIO33 TFT_CS CS 2 Data Command control pin GPIO15 TFT_DC RS 3 Write control pin GPIO04 TFT_WR WR 4 Read control pin GPIO02 TFT_RD RD 5 LCD Reset pin GPIO32 TFT_RST RST 6 GPIO12 TFT_D0 D0 7 GPIO13 TFT_D1 D1 8 GPIO26 TFT_D2 D2 9 8-bit parallel data GPIO25 TFT_D3 D3 10 GPIO17 TFT_D4 D4 11 GPIO16 TFT_D5 D5 12 GPIO27 TFT_D6 D6 13 GPIO14 TFT_D7 D7 14-21 Not used, don't connect NC D8-15 22 Module Ground GND GND 23 LED Backlight PWM GPIO5 TFT_BCKL BL 24-25 Module Power - VDD 26-27 Module Ground GND GND 28-29 Not connected NC 30 IO, I\u00b2C SDA GPIO21 TOUCH_SDA SDA 31 Touch Chip Interrupt GPIO34 TOUCH_IRQ INT 32 Not connected NC 33 Touch IC Reset 3.3V CRST 34 IO, I\u00b2C SCL GPIO22 TOUCH_SCL SCL You need to desolder the 0R resistor on the back side of the panel from the 16-bit position. Then resolder the 0R resistor in the 8-bit position. There are no pins shared between the touch controller and the lcd controller.","title":"Pin Configuration"},{"location":"displays/MRB3511/#lcd-configuration","text":"The lcd_config.ini file specifies the different properties of the display, except for the actual pin configuration: mrb3511 = -D ESP32_PARALLEL=1 -D ILI9488_DRIVER=1 -D TFT_WIDTH=320 -D TFT_HEIGHT=480 -D TFT_ROTATION=0 ; 0=0, 1=90, 2=180 or 3=270 degree -D USER_SETUP_LOADED=1 -D TOUCH_DRIVER=911 ; GT911 Capacitive touch panel driver -D SUPPORT_TRANSACTIONS","title":"LCD Configuration"},{"location":"displays/MRB3511/#hasp-build_flags","text":"Specify the LCD Configuration to use and define the 17 GPIOs in the environment build flags: build_flags = ${flags.esp32_flags} ; -- TFT_eSPI build options ------------------------ ${lcd.mrb3511} -D TFT_BCKL=5 ;None, configurable via web UI (e.g. 2 for D4) -D TFT_CS=33 ; Chip select control pin -D TFT_DC=15 ; =RS; Data Command control pin - must use a pin in the range 0-31 -D TFT_RST=32 ; Reset pin -D TFT_WR=4 ; Write strobe control pin - must use a pin in the range 0-31 -D TFT_RD=2 -D TFT_D0=12 ; Must use pins in the range 0-31 for the data bus -D TFT_D1=13 ; so a single register write sets/clears all bits -D TFT_D2=26 -D TFT_D3=25 -D TFT_D4=17 -D TFT_D5=16 -D TFT_D6=27 -D TFT_D7=14 -D TOUCH_SDA=21 -D TOUCH_SCL=22 -D TOUCH_IRQ=34 ; use 34-39 as these are input only pins -D TOUCH_RST=-1 ; not used, connected to 3.3V","title":"HASP build_flags"},{"location":"displays/Waveshare_40RPi_LCD%28C%29/","text":"6 GPIOs are required to drive the SPI display. One additional GPIO is needed for the XPT2046 touch sensor and one extra GPIO for backlight dimming. Including the Vcc and Gnd pins, a total of 13 connections need to be made to the MCU: Pin Configuration # Pin Function ESP32 Pin Config Name Display Pin 1 Module Power 3.3V 3.3V 3.3V 2 Module Power 5v 5V 5V 3 Not connected NC 4 5V 5-10 Not connected NC 11 Touch Interrupt NC TP_IRQ 12 (*) LED Backlight PWM TFT_BCKL LCD_LED 13 Not connected NC 14 Module Ground GND GND 15-16 Not connected NC 17 Module Power 3.3V 3.3V 18 Data Command control pin GPIO4 TFT_DC LCD_RS 19 SPI Master Out Slave In GPIO23 TFT_MOSI LCD/SI/TP_SI 20 Not connected NC 21 Touch Panel Slave Out GPIO19 TFT_MISO TP_SO 22 LCD Reset pin GPIO32 TFT_RST RST 23 SPI Clock GPIO18 TFT_SCLK LCD_SCK/TP_SCK 24 Chip select control pin GPIO15 TFT_CS LCD_CS 25 Module Ground GND GND 26 Touch Chip Select GPIO22 TOUCH_CS TP_CS !> (*)Only the WaveShare 4.0\" RPi LCD Revision C has a solder jumper on the back to enable PWM backlight dimming. Other revisions of this board do not have this feature. SPI MISO, MOSI and SCLK are shared between the touch controller and the lcd controller. LCD Configuration # The lcd_config.ini file specifies the different properties of the display, except for the actual pin configuration: raspberrypi = -D RPI_DISPLAY_TYPE=1 -D ST7796_DRIVER=1 -D TFT_WIDTH=320 -D TFT_HEIGHT=480 -D TFT_ROTATION=0 ; 0=0, 1=90, 2=180 or 3=270 degree -D SPI_FREQUENCY=80000000 -D SPI_TOUCH_FREQUENCY=2500000 -D USER_SETUP_LOADED=1 -D TOUCH_DRIVER=2046 ; XPT2046 Resistive touch panel driver -D SUPPORT_TRANSACTIONS HASP build_flags # Specify the LCD Configuration to use and define the 7 GPIOs in the environment build flags: build_flags = ${flags.esp32_flags} ; -- TFT_eSPI build options ------------------------ ${lcd.raspberrypi} ${esp32.vspi} ; Use VSPI hardware SPI bus -D TFT_CS=15 -D TFT_DC=4 -D TFT_RST=32 -D TFT_BCKL=-1 ; None, configurable via web UI (e.g. 21) -D TOUCH_CS=22","title":"Waveshare 40RPi LCD(C)"},{"location":"displays/Waveshare_40RPi_LCD%28C%29/#pin-configuration","text":"Pin Function ESP32 Pin Config Name Display Pin 1 Module Power 3.3V 3.3V 3.3V 2 Module Power 5v 5V 5V 3 Not connected NC 4 5V 5-10 Not connected NC 11 Touch Interrupt NC TP_IRQ 12 (*) LED Backlight PWM TFT_BCKL LCD_LED 13 Not connected NC 14 Module Ground GND GND 15-16 Not connected NC 17 Module Power 3.3V 3.3V 18 Data Command control pin GPIO4 TFT_DC LCD_RS 19 SPI Master Out Slave In GPIO23 TFT_MOSI LCD/SI/TP_SI 20 Not connected NC 21 Touch Panel Slave Out GPIO19 TFT_MISO TP_SO 22 LCD Reset pin GPIO32 TFT_RST RST 23 SPI Clock GPIO18 TFT_SCLK LCD_SCK/TP_SCK 24 Chip select control pin GPIO15 TFT_CS LCD_CS 25 Module Ground GND GND 26 Touch Chip Select GPIO22 TOUCH_CS TP_CS !> (*)Only the WaveShare 4.0\" RPi LCD Revision C has a solder jumper on the back to enable PWM backlight dimming. Other revisions of this board do not have this feature. SPI MISO, MOSI and SCLK are shared between the touch controller and the lcd controller.","title":"Pin Configuration"},{"location":"displays/Waveshare_40RPi_LCD%28C%29/#lcd-configuration","text":"The lcd_config.ini file specifies the different properties of the display, except for the actual pin configuration: raspberrypi = -D RPI_DISPLAY_TYPE=1 -D ST7796_DRIVER=1 -D TFT_WIDTH=320 -D TFT_HEIGHT=480 -D TFT_ROTATION=0 ; 0=0, 1=90, 2=180 or 3=270 degree -D SPI_FREQUENCY=80000000 -D SPI_TOUCH_FREQUENCY=2500000 -D USER_SETUP_LOADED=1 -D TOUCH_DRIVER=2046 ; XPT2046 Resistive touch panel driver -D SUPPORT_TRANSACTIONS","title":"LCD Configuration"},{"location":"displays/Waveshare_40RPi_LCD%28C%29/#hasp-build_flags","text":"Specify the LCD Configuration to use and define the 7 GPIOs in the environment build flags: build_flags = ${flags.esp32_flags} ; -- TFT_eSPI build options ------------------------ ${lcd.raspberrypi} ${esp32.vspi} ; Use VSPI hardware SPI bus -D TFT_CS=15 -D TFT_DC=4 -D TFT_RST=32 -D TFT_BCKL=-1 ; None, configurable via web UI (e.g. 21) -D TOUCH_CS=22","title":"HASP build_flags"}]}